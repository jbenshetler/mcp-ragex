name: Docker Publish to GHCR

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag'
        required: true
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-cpu:
    name: Build and Push CPU Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch,suffix=-cpu
          type=ref,event=pr,suffix=-cpu
          type=semver,pattern={{version}},suffix=-cpu
          type=semver,pattern={{major}}.{{minor}},suffix=-cpu
          type=raw,value=latest-cpu,enable={{is_default_branch}}
          type=raw,value=${{ github.event.inputs.tag }}-cpu,enable=${{ github.event_name == 'workflow_dispatch' }}
          
    - name: Build and push CPU Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/cpu/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=cpu
        cache-to: type=gha,mode=max,scope=cpu
        build-args: |
          BUILD_DATE=${{ github.event.repository.updated_at }}
          VCS_REF=${{ github.sha }}
          VERSION=${{ steps.meta.outputs.version }}


  create-deployment-summary:
    name: Create Deployment Summary
    runs-on: ubuntu-latest
    needs: [build-and-push-cpu]
    
    steps:
    - name: Create deployment summary
      run: |
        echo "## Docker Images Published ðŸš€" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Registry:** ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### CPU Image" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "# Default CPU installation (~2GB)" >> $GITHUB_STEP_SUMMARY
        echo "curl -sSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Or pull directly:" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-cpu" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### GPU Support" >> $GITHUB_STEP_SUMMARY
        echo "- CPU images provide full functionality" >> $GITHUB_STEP_SUMMARY
        echo "- GPU acceleration available via local CUDA build:" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "# Build CUDA image locally" >> $GITHUB_STEP_SUMMARY
        echo "docker build -t mcp-ragex:cuda -f docker/cuda/Dockerfile ." >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY